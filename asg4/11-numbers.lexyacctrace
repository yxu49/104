Starting parse
Entering state 0
Reducing stack by rule 7 (line 49):
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --(end of buffer or a NUL)
--accepting rule at line 33 ("# 1 "11-numbers.oc"")
--included # 1 "11-numbers.oc"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "<built-in>"")
--included # 1 "<built-in>"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "<command-line>"")
--included # 1 "<command-line>"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "/usr/include/stdc-predef.h" 1 3 4")
--included # 1 "/usr/include/stdc-predef.h"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "<command-line>" 2")
--included # 1 "<command-line>"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "11-numbers.oc"")
--included # 1 "11-numbers.oc"
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 1 "oclib.oh" 1")
--included # 1 "oclib.oh"
--accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 28 "oclib.oh"")
--included # 28 "oclib.oh"
--accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("__assert_fail")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("expr")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 50 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 100
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 63 100
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("file")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 63 100
Entering state 117
Reducing stack by rule 20 (line 98):
   $1 = nterm param ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 50 (",")
Next token is token ',' ()
Shifting token ',' ()
Entering state 100
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 63 100
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("line")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 63 100
Entering state 117
Reducing stack by rule 20 (line 98):
   $1 = nterm param ()
   $2 = token ',' ()
   $3 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc34610->{')' (7.28.55) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("putb")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("b")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc34b30->{')' (7.29.17) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("c")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc34f00->{')' (7.30.17) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("i")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc352e0->{')' (7.31.17) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("puts")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("s")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc356b0->{')' (7.32.20) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("endl")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 22 (line 103):
   $1 = token '(' ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc35950->{')' (7.33.12) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("getc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 22 (line 103):
   $1 = token '(' ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc35cc0->{')' (7.34.11) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("getw")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 22 (line 103):
   $1 = token '(' ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc35f10->{')' (7.35.14) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("getln")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 22 (line 103):
   $1 = token '(' ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc36190->{')' (7.36.15) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 65 ("string")
Next token is token TOK_STRING ()
Shifting token TOK_STRING ()
Entering state 8
Reducing stack by rule 17 (line 86):
   $1 = token TOK_STRING ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 59 ("[]")
Next token is token TOK_ARRAY ()
Shifting token TOK_ARRAY ()
Entering state 59
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("getargv")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 95
Reducing stack by rule 23 (line 105):
   $1 = nterm basetype ()
   $2 = token TOK_ARRAY ()
   $3 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 22 (line 103):
   $1 = token '(' ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc36570->{')' (7.37.19) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 67 ("void")
Next token is token TOK_VOID ()
Shifting token TOK_VOID ()
Entering state 5
Reducing stack by rule 14 (line 83):
   $1 = token TOK_VOID ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("exit")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 62
Reading a token: --accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2 28 62
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("status")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2 28 62
Entering state 98
Reducing stack by rule 21 (line 99):
   $1 = token '(' ()
   $2 = nterm identdecl ()
-> $$ = nterm param ()
Stack now 0 2 28
Entering state 63
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Shifting token ')' ()
Entering state 99
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 22
Reducing stack by rule 27 (line 113):
   $1 = token ';' ()
-> $$ = nterm block ()
Stack now 0 2 28 63 99
Entering state 116
Reducing stack by rule 19 (line 90):
   $1 = nterm identdecl ()
   $2 = nterm param ()
   $3 = token ')' ()
   $4 = nterm block ()
Deleting astree (0xc36920->{')' (7.38.22) ")":)
-> $$ = nterm function ()
Stack now 0 2
Entering state 27
Reducing stack by rule 3 (line 45):
   $1 = nterm program ()
   $2 = nterm function ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 33 ("# 4 "11-numbers.oc" 2")
--included # 4 "11-numbers.oc"
--accepting rule at line 35 ("
")
--accepting rule at line 35 ("
")
--accepting rule at line 64 ("int")
Next token is token TOK_INT ()
Shifting token TOK_INT ()
Entering state 7
Reducing stack by rule 16 (line 85):
   $1 = token TOK_INT ()
-> $$ = nterm basetype ()
Stack now 0 2
Entering state 26
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 60
Reducing stack by rule 24 (line 107):
   $1 = nterm basetype ()
   $2 = token TOK_IDENT ()
-> $$ = nterm identdecl ()
Stack now 0 2
Entering state 28
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 43 ("=")
Next token is token '=' ()
Shifting token '=' ()
Entering state 61
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 72 ("1")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 74 (line 241):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 28 61
Entering state 42
Reducing stack by rule 48 (line 172):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 28 61
Entering state 96
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 115
Reducing stack by rule 36 (line 130):
   $1 = nterm identdecl ()
   $2 = token '=' ()
   $3 = nterm expr ()
   $4 = token ';' ()
Deleting astree (0xc36d60->{';' (8.5.15) ";":)
-> $$ = nterm vardecl ()
Stack now 0 2
Entering state 32
Reducing stack by rule 31 (line 123):
   $1 = nterm vardecl ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 46):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 62 ("while")
Next token is token TOK_WHILE ()
Shifting token TOK_WHILE ()
Entering state 10
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 46
Reading a token: --accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 47
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 48 (">")
Next token is token TOK_GT ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 46
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 46
Entering state 85
Next token is token TOK_GT ()
Shifting token TOK_GT ()
Entering state 70
Reducing stack by rule 53 (line 179):
   $1 = token TOK_GT ()
-> $$ = nterm binop ()
Stack now 0 2 10 46 85
Entering state 80
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 72 ("0")
Next token is token TOK_INTCON ()
Shifting token TOK_INTCON ()
Entering state 16
Reducing stack by rule 74 (line 241):
   $1 = token TOK_INTCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 46 85 80
Entering state 42
Reducing stack by rule 48 (line 172):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 80
Entering state 103
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 42 (line 166):
   $1 = nterm expr ()
   $2 = nterm binop ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 46
Entering state 85
Next token is token ')' ()
Shifting token ')' ()
Entering state 106
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 57 ("{")
Next token is token '{' ()
Shifting token '{' ()
Entering state 23
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 71 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 54
Reading a token: --accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 47
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 46 85 106 23 15 54
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 23 15 54
Entering state 93
Next token is token ')' ()
Reducing stack by rule 69 (line 222):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm call2 ()
Stack now 0 2 10 46 85 106 23
Entering state 40
Next token is token ')' ()
Shifting token ')' ()
Entering state 82
Reducing stack by rule 68 (line 219):
   $1 = nterm call2 ()
   $2 = token ')' ()
Deleting astree (0xc372a0->{')' (8.7.16) ")":)
-> $$ = nterm call ()
Stack now 0 2 10 46 85 106 23
Entering state 39
Reducing stack by rule 45 (line 169):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 23
Entering state 36
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 77
Reducing stack by rule 35 (line 127):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0xc372a0->{';' (8.7.17) ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 46 85 106 23
Entering state 57
Reducing stack by rule 28 (line 115):
   $1 = token '{' ()
   $2 = nterm statement ()
-> $$ = nterm body ()
Stack now 0 2 10 46 85 106
Entering state 30
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 71 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 54
Reading a token: --accepting rule at line 73 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 75 (line 242):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 10 46 85 106 30 15 54
Entering state 42
Reducing stack by rule 48 (line 172):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30 15 54
Entering state 93
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 69 (line 222):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm call2 ()
Stack now 0 2 10 46 85 106 30
Entering state 40
Next token is token ')' ()
Shifting token ')' ()
Entering state 82
Reducing stack by rule 68 (line 219):
   $1 = nterm call2 ()
   $2 = token ')' ()
Deleting astree (0xc37450->{')' (8.8.14) ")":)
-> $$ = nterm call ()
Stack now 0 2 10 46 85 106 30
Entering state 39
Reducing stack by rule 45 (line 169):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30
Entering state 36
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 77
Reducing stack by rule 35 (line 127):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0xc37450->{';' (8.8.15) ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 46 85 106 30
Entering state 65
Reducing stack by rule 29 (line 119):
   $1 = nterm body ()
   $2 = nterm statement ()
-> $$ = nterm body ()
Stack now 0 2 10 46 85 106
Entering state 30
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 34 ("   ")
--accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 43 ("=")
Next token is token '=' ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 46 85 106 30
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30
Entering state 36
Next token is token '=' ()
Shifting token '=' ()
Entering state 72
Reducing stack by rule 59 (line 185):
   $1 = token '=' ()
-> $$ = nterm binop ()
Stack now 0 2 10 46 85 106 30 36
Entering state 80
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 47
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 37 ("+")
Next token is token '+' ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 46 85 106 30 36 80
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30 36 80
Entering state 103
Next token is token '+' ()
Shifting token '+' ()
Entering state 73
Reducing stack by rule 55 (line 181):
   $1 = token '+' ()
-> $$ = nterm binop ()
Stack now 0 2 10 46 85 106 30 36 80 103
Entering state 80
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 47
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 10 46 85 106 30 36 80 103 80
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30 36 80 103 80
Entering state 103
Next token is token ';' ()
Reducing stack by rule 42 (line 166):
   $1 = nterm expr ()
   $2 = nterm binop ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30 36 80
Entering state 103
Next token is token ';' ()
Reducing stack by rule 42 (line 166):
   $1 = nterm expr ()
   $2 = nterm binop ()
   $3 = nterm expr ()
-> $$ = nterm expr ()
Stack now 0 2 10 46 85 106 30
Entering state 36
Next token is token ';' ()
Shifting token ';' ()
Entering state 77
Reducing stack by rule 35 (line 127):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0xc376a0->{';' (8.9.28) ";":)
-> $$ = nterm statement ()
Stack now 0 2 10 46 85 106 30
Entering state 65
Reducing stack by rule 29 (line 119):
   $1 = nterm body ()
   $2 = nterm statement ()
-> $$ = nterm body ()
Stack now 0 2 10 46 85 106
Entering state 30
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 58 ("}")
Next token is token '}' ()
Shifting token '}' ()
Entering state 64
Reducing stack by rule 26 (line 112):
   $1 = nterm body ()
   $2 = token '}' ()
Deleting astree (0xc376a0->{'}' (8.10.1) "}":)
-> $$ = nterm block ()
Stack now 0 2 10 46 85 106
Entering state 29
Reducing stack by rule 30 (line 122):
   $1 = nterm block ()
-> $$ = nterm statement ()
Stack now 0 2 10 46 85 106
Entering state 120
Reducing stack by rule 37 (line 138):
   $1 = token TOK_WHILE ()
   $2 = token '(' ()
   $3 = nterm expr ()
   $4 = token ')' ()
   $5 = nterm statement ()
Deleting astree (0xc36e30->{'(' (8.6.7) "(":)
Deleting astree (0xc37050->{')' (8.6.18) ")":)
-> $$ = nterm while ()
Stack now 0 2
Entering state 33
Reducing stack by rule 32 (line 124):
   $1 = nterm while ()
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 46):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 71 ("puti")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 54
Reading a token: --accepting rule at line 71 ("number")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 47
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 71 (line 229):
   $1 = token TOK_IDENT ()
-> $$ = nterm variable ()
Stack now 0 2 15 54
Entering state 41
Reducing stack by rule 47 (line 171):
   $1 = nterm variable ()
-> $$ = nterm expr ()
Stack now 0 2 15 54
Entering state 93
Next token is token ')' ()
Reducing stack by rule 69 (line 222):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm call2 ()
Stack now 0 2
Entering state 40
Next token is token ')' ()
Shifting token ')' ()
Entering state 82
Reducing stack by rule 68 (line 219):
   $1 = nterm call2 ()
   $2 = token ')' ()
Deleting astree (0xc377e0->{')' (8.11.13) ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 39
Reducing stack by rule 45 (line 169):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 77
Reducing stack by rule 35 (line 127):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0xc377e0->{';' (8.11.14) ";":)
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 46):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--accepting rule at line 71 ("putc")
Next token is token TOK_IDENT ()
Shifting token TOK_IDENT ()
Entering state 15
Reading a token: --accepting rule at line 34 (" ")
--accepting rule at line 53 ("(")
Next token is token '(' ()
Shifting token '(' ()
Entering state 54
Reading a token: --accepting rule at line 73 ("'\n'")
Next token is token TOK_CHARCON ()
Shifting token TOK_CHARCON ()
Entering state 17
Reducing stack by rule 75 (line 242):
   $1 = token TOK_CHARCON ()
-> $$ = nterm constant ()
Stack now 0 2 15 54
Entering state 42
Reducing stack by rule 48 (line 172):
   $1 = nterm constant ()
-> $$ = nterm expr ()
Stack now 0 2 15 54
Entering state 93
Reading a token: --accepting rule at line 54 (")")
Next token is token ')' ()
Reducing stack by rule 69 (line 222):
   $1 = token TOK_IDENT ()
   $2 = token '(' ()
   $3 = nterm expr ()
-> $$ = nterm call2 ()
Stack now 0 2
Entering state 40
Next token is token ')' ()
Shifting token ')' ()
Entering state 82
Reducing stack by rule 68 (line 219):
   $1 = nterm call2 ()
   $2 = token ')' ()
Deleting astree (0xc37920->{')' (8.12.11) ")":)
-> $$ = nterm call ()
Stack now 0 2
Entering state 39
Reducing stack by rule 45 (line 169):
   $1 = nterm call ()
-> $$ = nterm expr ()
Stack now 0 2
Entering state 36
Reading a token: --accepting rule at line 52 (";")
Next token is token ';' ()
Shifting token ';' ()
Entering state 77
Reducing stack by rule 35 (line 127):
   $1 = nterm expr ()
   $2 = token ';' ()
Deleting astree (0xc37920->{';' (8.12.12) ";":)
-> $$ = nterm statement ()
Stack now 0 2
Entering state 31
Reducing stack by rule 4 (line 46):
   $1 = nterm program ()
   $2 = nterm statement ()
-> $$ = nterm program ()
Stack now 0
Entering state 2
Reading a token: --accepting rule at line 35 ("
")
--(end of buffer or a NUL)
--EOF (start condition 0)
Now at end of input.
Reducing stack by rule 1 (line 42):
   $1 = nterm program ()
-> $$ = nterm start ()
Stack now 0
Entering state 1
Now at end of input.
Shifting token $end ()
Entering state 3
Stack now 0 1 3
Cleanup: popping token $end ()
Cleanup: popping nterm start ()
