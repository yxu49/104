head	1.1;
access;
symbols;
locks;
comment	@# @;


1.1
date	2015.03.17.22.42.29;	author -;	state -;
branches;
next	;


desc
@@


1.1
log
@-
@
text
@$Id: SCORE.asg2,v 1.1 2014-10-30 15:20:19-07 - - $

Copy this file and all test files into the submit directory.
Run the script mk.build then mk.test.
After each item below, indicate with a negative number the
reason for each point deduction.

=================================================================

SOURCE CODE /30 points

    mk.build

    (3) checksource did not complain.  If it does, deduct
        minimum (3, int (complaints / 5))
        (BUT DO NOT DEDUCT ANY POINTS FOR COMPLAINTS
         ABOUT CODE GENERATED BY FLEX/BISON.)

    (3) Good overall coding style, choice of identifiers,
        readability indentation.

    (3) scanner.l uses macros to define complex regexes in part 1

    (3) part2 uses only simple patterns and macro references

    (3) actions for scanner calls functions, code very short

    (3) patterns in correct order:  i.e., res words before IDENT
        and . as the last pattern

    (3) Complete set of patterns as required by assignment

    (3) Error tokens recognized so no scanner jamming for bad
        IDENTs, string and char constants

    (3) # line "filename" directive matched and properly handled

    (3) token file dump from a function called by yylex, not
        called from main

total source points=
min 1, max 30

=================================================================

PROGRAM TESTING /30 points

    mk.tests

    If an executable called oc was not built by make, skip this
    section and assign 0 points.

    (3) exit status 0 for successful compiles, non-zero for fail

    (3) output to .tok file shows all #line directives in order
        each token listed in .tok file in same order as input file

    (3) test with -l option produces yylex token trace

    (3) file, line, offset coords printed; numeric and symbolic
        token codes; and lexical values in each case

    (3) .str file still created as per project 1 specs

    (9) Correct information generated for each of the output .tok
        files.  Deduct 2 points for each incorrect one, but not
        more than 9 points.

    (6) Deduct 2 points, max 6, for each run that reports a
        seg fault, dumps core, etc.

total testing points=
min 0, max 30

=================================================================

TOTALSCORE=
min 1, max 60

@
