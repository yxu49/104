Copy this file and all test files into the submit directory.
Run the script mk.build then mk.test.
After each item below, indicate with a negative number the
reason for each point deduction.

=================================================================

SOURCE CODE /30 points

    mk.build

    (3) checksource did not complain.  If it does, deduct
        minimum (3, int (complaints / 5))
        (BUT DO NOT DEDUCT FOR FLEX/BISON GENERATED CODE).

    (3) Good overall coding style, choice of identifiers,
        readability indentation.

    (3) Neatly written switch statement or array dispatch to
        select type checking among various token codes

    (3) Attributes and bitsets properly implemented in AST
        and symbol nodes

    (3) Implementation of expanding hash table for symbols with
        insertions and deletions.  Use unordered_map<string*,symbol*>.

    (3) Implementation of struct table with a field table for each.
        May reuse ident symbol table code, or write separate
        implementations.

    (3) Code to handle polymorphism for operators that require it.

    (3) Code to handle entering and leaving scopes, and for 
        keeping parameter lists for each function.

    (3) code to properly display attributes in both the ASt and
        the symbol table file.

    (3) Generally proper organization of the symbol module as a
        separate module, not just thrown into one of the project 3
        files.  Hash table may or may not be a separate module,
        but should be its own data structure.

total source points=
min 1, max 30

=================================================================

PROGRAM TESTING /30 points

    mk.tests

    If an executable called oc was not built by make, skip this
    section and assign 0 points.

    (3) exit status 0 for successful compiles, non-zero for fail

    (3) .str and .tok files created as per project 1 & 2 specs

    (3) output shows AST as per the sample figure in the assignment
        with additional information required by project 4

    (3) For the 9*.oc programs, parser returned to main and
        program exited without core and printed some kind of
        message about bad something or other, and type checker
        also complained about appropriate semantic issues

   (12) Correct information for each of the output .ast and
        .sym files.  Deduct 2 points for each incorrect one
        but not more than 12 points for this section.  Do not
        deduct points for weird output from the 9*.oc programs.
	Ordering of attributes printed does not matter.

    (6) Deduct 2 points, max 6, for each run that reports a
        seg fault, dumps core, etc.

total testing points=
min 0, max 30

=================================================================

TOTALSCORE=
min 1, max 60

